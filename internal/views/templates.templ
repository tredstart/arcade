package views

import "arcade/internal/models"

script addInput() {
    const container = document.getElementById('inputsContainer');
    const input = document.createElement('input');
    input.name = 'categories';
    input.placeholder = 'Category';
    input.classList.add('primary-input');
    container.appendChild(input);
}

templ NewTemplateForm() {
	<div id="new-template-form">
		<button class="primary-button" hx-get="/templates/new" hx-swap="outerHTML" hx-target="#new-template-form">New template</button>
	</div>
}

templ Templates(templates []models.Template) {
	@head("Templates")
	<body>
		<div class="default-layout">
			@aside()
			<div class="default-container">
				@NewTemplateForm()
				<div id="templates-list" hx-target="body" hx-swap="outerHTML" hx-get="/templates" hx-trigger="newTemplate from:body">
					for _, template := range templates {
						<p>{ template.Categories }</p>
						<form class="primary-form" method="post" action="/retro/new">
							<input type="hidden" name="template_id" value={ template.Id.String() }/>
							<button class="primary-button">Create retro from this template </button>
						</form>
					}
				</div>
			</div>
		</div>
	</body>
}

templ CreateTemplateForm() {
	<form class="primary-form" hx-post="/templates/new" hx-swap="outerHTML">
		<h5>Create new template</h5>
		<div class="inputs-container" id="inputsContainer">
			<input class="primary-input" placeholder="Category" name="categories" type="text"/>
		</div>
		<input type="button" class="primary-button" onclick={ addInput() } value="Add category"/>
		<button class="primary-button">Submit </button>
	</form>
}
